[{"/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/index.tsx":"1","/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/reportWebVitals.ts":"2","/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/App.tsx":"3","/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/utils/utils.ts":"4","/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/components/Form.tsx":"5","/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/components/List.tsx":"6"},{"size":500,"mtime":1609998761000,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1609998761000,"results":"9","hashOfConfig":"8"},{"size":4019,"mtime":1610235049128,"results":"10","hashOfConfig":"8"},{"size":986,"mtime":1610235049128,"results":"11","hashOfConfig":"8"},{"size":2211,"mtime":1610127767000,"results":"12","hashOfConfig":"8"},{"size":822,"mtime":1610160639752,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"4mosww",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/index.tsx",[],["29","30"],"/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/reportWebVitals.ts",[],"/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/App.tsx",["31","32","33","34","35","36","37","38"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory\n} from \"react-router-dom\"\n\nimport Form from './components/Form'\nimport List from './components/List'\nimport { GetANote, GetAllNotes, NoteType, FormProp, NoteListProp } from './utils/utils'\nimport dotenv from 'dotenv'\n\nconst AppContainer = styled.div`\ndisplay: flex;\nflex-direction: row;\nflex-wrap: nowrap;\nwidth: 100%;\nheight: 100%;\n`\n\nconst SideMenu = styled.div`\n\n`\n\nconst Button = styled.button`\n\n`\n\nconst MainContent = styled.div`\nwidth: 100%;\n`\n\nfunction App() {\n  const noteType: NoteType = { _id: \"\", title: \"\", content: \"\" }\n  const [notesList, setNotesList] = useState([])\n  const [selectedNote, setSelectedNote] = useState(noteType)\n  const [refresh, setRefresh] = useState(false)\n  const history = useHistory()\n\n  useEffect(() => {\n    if (process.env.REACT_APP_API_BASE_URL) { \n      console.log(process.env.REACT_APP_API_BASE_URL)\n      // axios.defaults.baseURL = process.env.REACT_APP_API_BASE_URL\n      // console.log(process.env.REACT_APP_API_BASE_URL)\n    }\n    \n    updateNotesList()\n  }, [])\n\n  let updateNotesList = () => {\n    GetAllNotes()\n      .then((notes) => {\n        if (notes) {\n          setNotesList(notes)\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  let onListSelect = (_id: String) => {\n    GetANote(_id)\n      .then((note) => {\n        console.log(note)\n        setSelectedNote(note)\n      })\n  }\n\n  let onSubmitPost = (e: React.FormEvent | any) => {\n    e.preventDefault();\n\n    const title = e.currentTarget.title.value\n    const content = e.currentTarget.content.value\n    axios.post(\n      `${process.env.REACT_APP_API_BASE_URL}/notes`,\n      {\n        title: title,\n        content: content\n      }\n    )\n      .then((res) => {\n        if (res.status === 200) { \n          GetAllNotes().then((notes) => setNotesList(notes))\n        }\n      })\n    console.log(e.currentTarget.content.value)\n  }\n\n  let onSubmitPatch = (e: React.FormEvent | any, noteId: any) => {\n    e.preventDefault();\n\n    const title = e.currentTarget.title.value\n    const content = e.currentTarget.content.value\n    axios\n      .patch(\n        `${process.env.REACT_APP_API_BASE_URL}/notes/${noteId}`,\n        {\n          title: title,\n          content: content\n        })\n      .then((res) => {\n        if (res.status === 200) {\n          GetAllNotes().then((notes) => setNotesList(notes))\n        }\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  let onSubmitDelete = (e: React.MouseEvent | any) => {\n    e.preventDefault();\n    console.log(e.target.value)\n    axios\n      .delete(\n        `${process.env.REACT_APP_API_BASE_URL}/notes/${e.target.value}`\n      )\n      .then((res) => {\n        if (res.status === 200) {\n          GetAllNotes().then((notes)=> setNotesList(notes))\n        }\n\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n\n// let returnHome = () => {\n//   history.push('/')\n//   updateNotesList()\n// }\n\n\nreturn (\n  <Router>\n    <AppContainer>\n      <SideMenu>\n        <Link to=\"/create\">Add New Note</Link>\n\n        <List notes={notesList} onListSelect={onListSelect} />\n      </SideMenu>\n      <MainContent>\n        <Switch>\n          <Route path=\"/create\">\n            <Form config={{ type: \"create\" }} onSubmit={onSubmitPost} />\n          </Route>\n          <Route path=\"/note/:noteId\">\n            <Form config={{ type: \"update\" }} onSubmit={onSubmitPost} onDelete={onSubmitDelete} onPatch={onSubmitPatch} />\n            {/* <FormComp config={{type: \"update\", defaultValue: {title: }}} */}\n          </Route>\n          <Route path=\"/\">\n            Select or Add a new note\n          </Route>\n        </Switch>\n      </MainContent>\n    </AppContainer>\n  </Router>\n\n  // <>\n  //   <NoteList notes={notesList}/>\n  //   <Form onSubmit={onFormSubmit}/>\n  // </>\n);\n}\n\nexport default App;\n","/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/utils/utils.ts",[],"/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/components/Form.tsx",[],"/Users/mims/Desktop/DockerExamples/NotesApp/front-end/src/components/List.tsx",["39","40"],"import react from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport { NoteListProp, NoteType } from '../utils/utils'\n\nconst ListItem = styled(Link)`\n// display: flex;\n// flex-direction: row;\n// height: 100%;\ntext-decoration: none;\n`\n\nconst ListItemTitle = styled.p`\n\n`\nconst ListItemContent = styled.span`\n\n`\nfunction List({ notes }: NoteListProp) {\n    return (\n        <>\n            {notes.map((note: NoteType) => {\n                return (\n                    <div key={note._id as string}>\n                        <ListItem to={`/note/${note._id}`} replace>\n                                <ListItemTitle>{note.title}</ListItemTitle>\n                        </ListItem>\n                    </div>\n                )\n            })}\n        </>\n    )\n}\n\nexport default List;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":15,"column":43,"nodeType":"47","messageId":"48","endLine":15,"endColumn":51},{"ruleId":"45","severity":1,"message":"49","line":15,"column":53,"nodeType":"47","messageId":"48","endLine":15,"endColumn":65},{"ruleId":"45","severity":1,"message":"50","line":16,"column":8,"nodeType":"47","messageId":"48","endLine":16,"endColumn":14},{"ruleId":"45","severity":1,"message":"51","line":30,"column":7,"nodeType":"47","messageId":"48","endLine":30,"endColumn":13},{"ruleId":"45","severity":1,"message":"52","line":41,"column":10,"nodeType":"47","messageId":"48","endLine":41,"endColumn":22},{"ruleId":"45","severity":1,"message":"53","line":42,"column":10,"nodeType":"47","messageId":"48","endLine":42,"endColumn":17},{"ruleId":"45","severity":1,"message":"54","line":42,"column":19,"nodeType":"47","messageId":"48","endLine":42,"endColumn":29},{"ruleId":"45","severity":1,"message":"55","line":43,"column":9,"nodeType":"47","messageId":"48","endLine":43,"endColumn":16},{"ruleId":"45","severity":1,"message":"56","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":13},{"ruleId":"45","severity":1,"message":"57","line":17,"column":7,"nodeType":"47","messageId":"48","endLine":17,"endColumn":22},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"@typescript-eslint/no-unused-vars","'FormProp' is defined but never used.","Identifier","unusedVar","'NoteListProp' is defined but never used.","'dotenv' is defined but never used.","'Button' is assigned a value but never used.","'selectedNote' is assigned a value but never used.","'refresh' is assigned a value but never used.","'setRefresh' is assigned a value but never used.","'history' is assigned a value but never used.","'react' is defined but never used.","'ListItemContent' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]